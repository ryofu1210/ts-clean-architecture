{
  "compilerOptions": {
    "target": "es2016",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "lib": ["es6","dom"],                                /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "module": "commonjs",                                /* Specify what module code is generated. */
    /* "rootDir": "src", */                              /* Specify the root folder within your source files. */
    "resolveJsonModule": true,                           /* Enable importing .json files. */
    "outDir": "lib",                                     /* Specify an output folder for all emitted files. */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */
    "strict": true,                                      /* Enable all strict type-checking options. */
    "skipLibCheck": true,                                /* Skip type checking all .d.ts files. */
    "baseUrl": ".",                                      /* Base directory to resolve non-absolute module names. */
    "experimentalDecorators": true,                     /* Enables experimental support for ES7 decorators. */
    "emitDecoratorMetadata": true,                     /* Enables experimental support for emitting type metadata for decorators. */
    "paths": {
      "@/*": ["src/*"],
      "@usecase/*": ["src/usecase/*"],
      "@domain/*": ["src/domain/*"]
    }
  },
  "include": ["src/**/*"],                               /* Specifies an array of glob patterns that match TypeScript source files to be included in compilation. */
  "exclude": ["node_modules", "lib"]                     /* Specifies an array of glob patterns that match files to be excluded from compilation. */
}
